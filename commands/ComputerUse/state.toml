name = "/cu:state"
description = "Screenshot current page (capture_state) and optionally send to Gemini with a prompt."

prompt = '''
You have the tools: capture_state.

Args:
- action_name:str   (label for the screenshot filename)
- result_ok:bool    (default true)
- error_msg:str     (default "")
- prompt:str        (optional: if provided, call `gemini -p "@<file> <prompt>"`)

Steps:
1) capture_state(action_name={{action_name|"state"}}, result_ok={{result_ok|true}}, error_msg={{error_msg|""}})
2) If ok=false â†’ print error and stop.
3) If {{prompt}} provided, run a shell one-liner to call Gemini on the saved image.

!{
@echo off
set "P={{path}}"
set "PROMPT={{prompt}}"

IF "%P%"=="" (
  echo No screenshot path returned.
  exit /B 0
)

IF NOT "%PROMPT%"=="" IF NOT "%PROMPT%"=="None" (
  gemini -p "@%P% %PROMPT%"
) ELSE (
  echo Screenshot saved at: %P%
  echo URL: {{url}}
)
}
'''
[defaults]
action_name = "state"
result_ok   = true
error_msg   = ""
prompt      = ""